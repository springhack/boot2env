#!/bin/bash

show_log() {
  eol=${4:-"\n"}
  echo -n -e "$1\033[0;35m[$2]\033[0m $3$eol" 1>&2
}

show_logo() {
  cat << EOF
[0m[1;30m         #####[0m
[0m[1;30m        #######
[0m[1;30m        ##[0m[1;37mO[0m[1;30m#[0m[1;37mO[0m[1;30m##            Powered by SpringHack
[0m[1;30m        #[0m[1;33m#####[0m[1;30m#            Email: springhack@live.cn
[0m[1;30m      ##[0m[1;37m##[0m[1;33m###[0m[1;37m##[0m[1;30m##
[0m[1;30m     #[0m[1;37m##########[0m[1;30m##          [0m
[0m[1;30m    #[0m[1;37m############[0m[1;30m##         [0m
[0m[1;30m    #[0m[1;37m############[0m[1;30m###        [0m
[0m[1;33m   ##[0m[1;30m#[0m[1;37m###########[0m[1;30m##[0m[1;33m#        [0m
[0m[1;33m ######[0m[1;30m#[0m[1;37m#######[0m[1;30m#[0m[1;33m######      [0m
[0m[1;33m #######[0m[1;30m#[0m[1;37m#####[0m[1;30m#[0m[1;33m#######      [0m
[0m[1;33m   #####[0m[1;30m#######[0m[1;33m#####        [0m
EOF
}

get_host_info() {
  case $1 in
    host)
      awk '{print $1}' | xargs
      ;;
    user)
      awk '{print $2}' | xargs
      ;;
    pass)
      awk '{print $3}' | xargs
      ;;
    port)
      awk '{print $4}' | xargs
      ;;
    file)
      awk '{print $5}' | xargs
      ;;
    opts)
      awk '{$1="";$2="";$3="";$4="";$5="";print $0}'
      ;;
    *)
      echo '*'
      ;;
  esac
}

read_choice() {
  show_log '' '<=>'  'Which host:' ' '
  read index
  echo $index
}

show_host_select() {
  show_log '' '<=>' 'Choose which host to connect ...'
  count=0
  hosts=()
  while IFS= read line; do
    if [ "${line:0:1}" != "#" ] && [ "$line" != "" ];
    then
      count=$(expr $count + 1);
      host=$(get_host_info host <<< $line)
      user=$(get_host_info user <<< $line)
      hosts[$count]="$line"
      show_log '  ' $count $user@$host
    fi
  done < ~/.ssh/auto_login
  choice=$(read_choice)
  if [ 0 -lt "$choice" ] 2>/dev/null && [ "$choice" -le "$count" ];
  then
    echo "${hosts[$choice]}"
  else
    echo '*'
  fi
}

do_connect_host() {
  show_log '' '<=>' 'Connecting to host ...'
  host=$(get_host_info host <<< $1)
  user=$(get_host_info user <<< $1)
  pass=$(get_host_info pass <<< $1)
  port=$(get_host_info port <<< $1)
  file=$(get_host_info file <<< $1)
  opts=$(get_host_info opts <<< $1 | awk '{$1=$1;print}')
  opts="${opts//\"/\\\"}"
  if [ "$opts" = "" ];
  then
    opts="-oStrictHostKeyChecking=no"
  else
    opts="-oStrictHostKeyChecking=no $opts"
  fi
  if [ "$port" = '*' ];
  then
    port=22
  fi
  if [ "$pass" != '*' ];
  then
    show_log '' '===' 'Connecting host using password ...'
    line='@!#$%^&*()_+"'
    pass="$(perl -ne 'print quotemeta($_)' <<< "$pass")"
    if [ "${pass: -1}" = "\\" ];
    then
      pass="${pass%?}"
    fi
    ssh_file=$(mktemp)
    cat > $ssh_file << EOF
#!/usr/bin/expect
spawn bash -c "ssh $opts $user@$host -p $port"
set timeout 10
expect {
  "assword" { send "${pass}\r" }
}
interact
EOF
    chmod 755 $ssh_file
    $ssh_file
    rm $ssh_file
    return
  fi
  if [ "$file" != '*' ];
  then
    show_log '' '===' 'Connecting host using key file ...'
    ssh $opts $user@$host -p $port -i $file
    return
  fi
  show_log '' '===' 'Connecting host just without anything ...'
  ssh $opts $user@$host -p $port
}

main() {
  show_log '' '*' 'Welcome use ssh auto login tool'
  show_logo
  host="$(show_host_select)"
  if [ "$host" = '*' ];
  then
    show_log '' '*' 'Emmm, bye!'
    exit 0
  fi
  do_connect_host "$host"
  show_log '' '*' 'Bye!'
}

main $@
